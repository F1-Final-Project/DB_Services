const Order = require('../models/order');class OrderService {    static async getAllOrder(){        return await Order.find({})            .populate('staff')            .populate('orderItems.ingredients')            .populate('orderItems.additionalIngredients')            .populate('newOrderItems.ingredients')            .populate('newOrderItems.additionalIngredients')            .exec();    }    static async getOrderById(id){        return await Order.findOne({_id: id})            .populate('staff')            .populate('orderItems.ingredients')            .populate('orderItems.additionalIngredients')            .populate('newOrderItems.ingredients')            .populate('newOrderItems.additionalIngredients')            .exec();    }    static async createOrder(data){        const newData = {            staff: data.staff,            table: data.table,            orderItems: data.orderItems,            newOrderItems: data.newOrderItems,            orderPrice: data.orderPrice,            onKitchen: data.onKitchen,            completed: data.completed,            created_at: new Date(),            updated_at: new Date()        };        const createData = new Order(newData);        await createData.save();        return createData;    }    static async updateOrder(data, id){        const newData = {            staff: data.staff,            table: data.table,            orderItems: data.orderItems,            newOrderItems: data.newOrderItems,            orderPrice: data.orderPrice,            onKitchen: data.onKitchen,            completed: data.completed,            updated_at: new Date()        };        await Order.findOneAndUpdate({_id: id}, newData, {new: true});        return Order.find({_id: id})            .populate('staff')            .populate('orderItems.ingredients')            .populate('orderItems.additionalIngredients')            .populate('newOrderItems.ingredients')            .populate('newOrderItems.additionalIngredients')            .exec();    }    static async deleteOrder(id){        await Order.findByIdAndRemove(id);        return id;    }};module.exports = OrderService;